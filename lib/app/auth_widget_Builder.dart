import 'package:firebase_user_avatar_flutter/app/home/home_page.dart';
import 'package:firebase_user_avatar_flutter/app/sign_in/sign_in_page.dart';
import 'package:firebase_user_avatar_flutter/services/firebase_auth_service.dart';
import 'package:firebase_user_avatar_flutter/services/firebase_storage_service.dart';
import 'package:firebase_user_avatar_flutter/services/firestore_service.dart';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';


/// Used to create User-dependant objects that need to be accessible by all widgets
/// This Widget should Live about the [MaterialApp]
/// see [AuthWidget], a descendant widget that consume the snapshot generated by this user
class AuthWidgetBuilder extends StatelessWidget {
  const AuthWidgetBuilder({Key key, @required this.builder}) : super(key: key);
  final Widget Function(BuildContext, AsyncSnapshot<User>) builder;

  @override
  Widget build(BuildContext context) {
    print('AuthWidgetBuilder Build');
    final authService =
        Provider.of<FirebaseAuthService>(context, listen: false);
    return StreamBuilder<User>(
      stream: authService.onAuthStateChanged,
      builder: (context, snapshot) {
        print('Stream Builder : ${snapshot.connectionState}');

          final user = snapshot.data;
          if (user != null) {
            return MultiProvider(
              providers: [
                Provider<User>.value(value: user),
                Provider<FirebaseStorageService>(
                  builder: (_) => FirebaseStorageService(uid: user.uid),
                ),
                Provider<FirestoreService>(
                  builder: (_) => FirestoreService(uid: user.uid),
                ),
              ],
              child: builder(context,snapshot)
            );
          }
          return builder(context,snapshot);

      },
    );
  }
}
